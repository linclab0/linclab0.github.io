o_rs_isc = vector("numeric")
for(j in unique(do$Subject)){
rsdf1 = get_lower_tri_labeled(o_rsm[[j]])
rsdfs = NULL
for(k in unique(do$Subject)[-j]){
rsdf2 = get_lower_tri_labeled(o_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
corr = get_corr(rsdf1,avg_rsdf)
o_rs_isc = append(o_rs_isc, corr)
}
mean(o_rs_isc)
y_rs_isc = vector("numeric")
for(j in unique(dy$Subject)){
rsdf1 = get_lower_tri_labeled(y_rsm[[j]])
rsdfs = NULL
for(k in unique(dy$Subject)[-j]){
rsdf2 = get_lower_tri_labeled(y_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
corr = get_corr(rsdf1,avg_rsdf)
y_rs_isc = append(y_rs_isc, corr)
}
mean(y_rs_isc)
oy_rs_isc = vector("numeric")
rsdfs = NULL
for(k in unique(dy$Subject)){
rsdf2 = get_lower_tri_labeled(y_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_y_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
rsdfs = NULL
for(k in unique(do$Subject)){
rsdf2 = get_lower_tri_labeled(o_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_o_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
rsdfs = NULL
for(k in unique(dy$Subject)){
rsdf2 = get_lower_tri_labeled(y_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_y_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
rsdfs = NULL
for(k in unique(do$Subject)){
rsdf2 = get_lower_tri_labeled(o_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_o_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
o_avgy_rs_isc = vector("numeric")
y_avgo_rs_isc = vector("numeric")
for(j in unique(do$Subject)){
rsdf1 = get_lower_tri_labeled(o_rsm[[j]])
corr = get_corr(rsdf1,avg_y_rsdf)
o_avgy_rs_isc = append(o_avgy_rs_isc, corr)
}
for(j in unique(dy$Subject)){
rsdf1 = get_lower_tri_labeled(oy_rsm[[j]])
corr = get_corr(rsdf1,avg_o_rsdf)
y_avgo_rs_isc = append(y_avgo_rs_isc, corr)
}
rsdfs = NULL
for(k in unique(dy$Subject)){
rsdf2 = get_lower_tri_labeled(y_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_y_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
rsdfs = NULL
for(k in unique(do$Subject)){
rsdf2 = get_lower_tri_labeled(o_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_o_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
o_avgy_rs_isc = vector("numeric")
y_avgo_rs_isc = vector("numeric")
for(j in unique(do$Subject)){
rsdf1 = get_lower_tri_labeled(o_rsm[[j]])
corr = get_corr(rsdf1,avg_y_rsdf)
o_avgy_rs_isc = append(o_avgy_rs_isc, corr)
}
for(j in unique(dy$Subject)){
rsdf1 = get_lower_tri_labeled(y_rsm[[j]])
corr = get_corr(rsdf1,avg_o_rsdf)
y_avgo_rs_isc = append(y_avgo_rs_isc, corr)
}
mean(o_rs_isc)
mean(y_rs_isc)
mean(o_avgy_rs_isc)
mean(y_avgo_rs_isc)
ggplot()+
geom_density(data = tibble(o_rs_isc), aes(x = o_rs), color = "blue")+
geom_density(data = tibble(y_rs_isc), aes(x = y_rs), color = "red")+
geom_density(data = tibble(o_avgy_rs_isc), aes(x = yo_rs), color = "purple")+
geom_density(data = tibble(y_avgo_rs_isc), aes(x = yo_rs), color = "black")
ggplot()+
geom_density(data = tibble(o_rs_isc), aes(x = o_rs), color = "blue")
rsdfs = NULL
for(k in unique(dy$Subject)){
rsdf2 = get_lower_tri_labeled(y_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_y_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
rsdfs = NULL
for(k in unique(do$Subject)){
rsdf2 = get_lower_tri_labeled(o_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_o_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim))
o_avgy_rs_isc = vector("numeric")
y_avgo_rs_isc = vector("numeric")
for(j in unique(do$Subject)){
rsdf1 = get_lower_tri_labeled(o_rsm[[j]])
corr = get_corr(rsdf1,avg_y_rsdf)
o_avgy_rs_isc = append(o_avgy_rs_isc, corr)
}
for(j in unique(dy$Subject)){
rsdf1 = get_lower_tri_labeled(y_rsm[[j]])
corr = get_corr(rsdf1,avg_o_rsdf)
y_avgo_rs_isc = append(y_avgo_rs_isc, corr)
}
y_rs_isc
ggplot()+
geom_density(data = tibble(o_rs_isc), aes(x = o_rs_isc), color = "blue")+
geom_density(data = tibble(y_rs_isc), aes(x = y_rs_isc), color = "red")+
geom_density(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc), color = "purple")+
geom_density(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc), color = "black")
ggplot()+
geom_point(data = tibble(o_rs_isc), aes(x = o_rs_isc), color = "blue")+
geom_point(data = tibble(y_rs_isc), aes(x = y_rs_isc), color = "red")+
geom_point(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc), color = "purple")+
geom_point(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc), color = "black")
ggplot()+
geom_density(data = tibble(o_rs_isc), aes(x = o_rs_isc), color = "blue")+
geom_point(data = tibble(o_rs_isc), aes(x = o_rs_isc, y = 1), color = "blue")+
geom_density(data = tibble(y_rs_isc), aes(x = y_rs_isc), color = "red")+
geom_density(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc), color = "purple")+
geom_density(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc), color = "black")
ggplot()+
geom_density(data = tibble(o_rs_isc), aes(x = o_rs_isc), color = "blue")+
geom_point(data = tibble(o_rs_isc), aes(x = o_rs_isc, y = 0.5), color = "blue")+
geom_density(data = tibble(y_rs_isc), aes(x = y_rs_isc), color = "red")+
geom_point(data = tibble(y_rs_isc), aes(x = y_rs_isc, y = 0.5), color = "red")+
geom_density(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc), color = "purple")+
geom_point(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc, y=0.5), color = "purple")+
geom_density(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc), color = "black")+
geom_point(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc, y=0.5), color = "black")
ggplot()+
geom_density(data = tibble(o_rs_isc), aes(x = o_rs_isc), color = "blue")+
geom_point(data = tibble(o_rs_isc), aes(x = o_rs_isc, y = 0), color = "blue")+
geom_density(data = tibble(y_rs_isc), aes(x = y_rs_isc), color = "red")+
geom_point(data = tibble(y_rs_isc), aes(x = y_rs_isc, y = 0.5), color = "red")+
geom_density(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc), color = "purple")+
geom_point(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc, y=1), color = "purple")+
geom_density(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc), color = "black")+
geom_point(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc, y=1.5), color = "black")
hclust(as.dist(1-as.matric(avg_o_rsdf)) ) %>% plot()
hclust(as.dist(1-as.matrix(avg_o_rsdf)) ) %>% plot()
avg_o_rsdf
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
as.matrix()
hclust(as.dist(1-avg_o_rsm) ) %>% plot()
avg_o_rsm
avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim)
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim)
View(avg_o_rsm)
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
select(sort(current_vars()))
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
select(sort(peek_vars()))
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
select(sort(current_vars()))
avg_y_rsdf
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
select(sort(-rowname))
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
select(sort(everything(-rowname)))
?sort
?vars()
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
rownames_to_column() %>%
select(sort(everything()))
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
rownames_to_column() %>%
select(sort(vars()))
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
column_to_rownames() %>%
select(sort(vars()))
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
column_to_rownames()
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
column_to_rownames() %>%
select(sort(current_vars()))
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
column_to_rownames() %>%
select(sort(current_vars())) %>%
as.matrix()
?forceSymmetric
Matrix::forceSymmetric(avg_o_rsm,uplo="L")
avg_o_rsm = Matrix::forceSymmetric(avg_o_rsm,uplo="L")
diag(avg_o_rsm)<-1
diag(avg_o_rsm)
?diag
avg_o_rsm = Matrix::forceSymmetric(avg_o_rsm,uplo="L")
avg_o_rsm2 <- Matrix::forceSymmetric(avg_o_rsm,uplo="L")
avg_o_rsm2
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
column_to_rownames() %>%
select(sort(current_vars())) %>%
as.matrix()
avg_o_rsm2 <- Matrix::forceSymmetric(avg_o_rsm,uplo="L")
avg_o_rsm2
diag(avg_o_rsm2)<-1
avg_o_rsm2
hclust(as.dist(1-avg_o_rsm2) ) %>% plot()
rsdfs = NULL
for(k in unique(dy$Subject)){
rsdf2 = get_lower_tri_labeled(y_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_y_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim, na.rm=T))
rsdfs = NULL
for(k in unique(do$Subject)){
rsdf2 = get_lower_tri_labeled(o_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_o_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim, na.rm=T))
o_avgy_rs_isc = vector("numeric")
y_avgo_rs_isc = vector("numeric")
for(j in unique(do$Subject)){
rsdf1 = get_lower_tri_labeled(o_rsm[[j]])
corr = get_corr(rsdf1,avg_y_rsdf)
o_avgy_rs_isc = append(o_avgy_rs_isc, corr)
}
for(j in unique(dy$Subject)){
rsdf1 = get_lower_tri_labeled(y_rsm[[j]])
corr = get_corr(rsdf1,avg_o_rsdf)
y_avgo_rs_isc = append(y_avgo_rs_isc, corr)
}
mean(o_rs_isc)
mean(y_rs_isc)
mean(o_avgy_rs_isc)
mean(y_avgo_rs_isc)
mean(o_rs_isc)
mean(y_rs_isc)
mean(o_avgy_rs_isc)
mean(y_avgo_rs_isc)
ggplot()+
geom_density(data = tibble(o_rs_isc), aes(x = o_rs_isc), color = "blue")+
geom_point(data = tibble(o_rs_isc), aes(x = o_rs_isc, y = 0), color = "blue")+
geom_density(data = tibble(y_rs_isc), aes(x = y_rs_isc), color = "red")+
geom_point(data = tibble(y_rs_isc), aes(x = y_rs_isc, y = 0.5), color = "red")+
geom_density(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc), color = "purple")+
geom_point(data = tibble(o_avgy_rs_isc), aes(x = o_avgy_rs_isc, y=1), color = "purple")+
geom_density(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc), color = "black")+
geom_point(data = tibble(y_avgo_rs_isc), aes(x = y_avgo_rs_isc, y=1.5), color = "black")
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
column_to_rownames() %>%
select(sort(current_vars())) %>%
as.matrix()
avg_o_rsm2 <- Matrix::forceSymmetric(avg_o_rsm,uplo="L")
diag(avg_o_rsm2)<-1
View(avg_o_rsm2)
avg_o_rsm2@x
avg_o_rsm2
avg_o_rsm = avg_o_rsdf %>%
pivot_wider(names_from = colname, values_from = sim) %>%
column_to_rownames() %>%
select(sort(current_vars())) %>%
as.matrix()
avg_o_rsm2 <- Matrix::forceSymmetric(avg_o_rsm,uplo="L")
diag(avg_o_rsm2)<-1
hclust(as.dist(1-avg_o_rsm2) ) %>% plot()
avg_o_rsm3 = na.omit(avg_o_rsm2)
hclust(as.dist(1-avg_o_rsm3) ) %>% plot()
View(avg_o_rsm3)
avg_o_rsm3
avg_o_rsdf
View(avg_o_rsm2)
View(avg_rsdf)
?hclust
hclust(as.dist(1-avg_o_rsm3), method="complete" ) %>% plot()
which(is.na(avg_o_rsm2))
is.na(avg_o_rsm2)
avg_o_rsm2
rsdfs = NULL
for(k in unique(dy$Subject)){
rsdf2 = get_lower_tri_labeled(y_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
View(rsdfs)
summary(rsdfs)
avg_y_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim, na.rm=T))
View(avg_y_rsdf)
rsdfs = NULL
for(k in unique(do$Subject)){
rsdf2 = get_lower_tri_labeled(o_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
for(k in unique(do$Subject)){
rsdf2 = get_lower_tri_labeled(o_rsm[[k]])
rsdfs = bind_rows(rsdfs, rsdf2)
}
avg_o_rsdf = rsdfs %>%
group_by(rowname, colname) %>%
summarize(sim = mean(sim, na.rm=T))
y_rs_isc
which(max(y_rs_isc))
which(y_rs_isc == max(y_rs_isc))
hclust(as.dist(1-y_rsm[[20]]), method="complete" ) %>% plot()
a<-hclust(as.dist(1-y_rsm[[20]]), method="complete" )
a
o_avg_rsdf
o_avg_rsdfs
avg_o_rsdfs
avg_o_rsdf
join_avg_rsdfs = avg_o_rsdf %>%
left_join(avg_y_rsdf, by = c("rowname", "colname"))
ggplot()+
geom_point(aes(x=sim.x, y=sim.y))
join_avg_rsdfs = avg_o_rsdf %>%
left_join(avg_y_rsdf, by = c("rowname", "colname"))
ggplot(join_avg_rsdfs)+
geom_point(aes(x=sim.x, y=sim.y))
join_avg_rsdfs = avg_o_rsdf %>%
left_join(avg_y_rsdf, by = c("rowname", "colname"))
ggplot(join_avg_rsdfs)+
geom_point(aes(x=sim.x, y=sim.y))+
geom_smooth(method = "lm")
join_avg_rsdfs = avg_o_rsdf %>%
left_join(avg_y_rsdf, by = c("rowname", "colname"))
ggplot(join_avg_rsdfs, aes(x=sim.x, y=sim.y))+
geom_point()+
geom_smooth(method = "lm")
cor.test(join_avg_rsdfs$sim.x, join_avg_rsdfs$sim.y)
View(avg_y_rsdf)
library(mnormt)
install.packages("mnormt")
xhat <- c(0.2, -0.2)
Sigma <- matrix(c(0.4, 0.3,
0.3, 0.45), ncol=2)
x1 <- seq(-2, 4,length=151)
x2 <- seq(-4, 2,length=151)
f <- function(x1,x2, mean=xhat, varcov=Sigma)
dmnorm(cbind(x1,x2), mean,varcov)
z <- outer(x1,x2, f)
mycols <- topo.colors(100,0.5)
image(x1,x2,z, col=mycols, main="Prior density",
xlab=expression('x'[1]), ylab=expression('x'[2]))
contour(x1,x2,z, add=TRUE)
points(0.2, -0.2, pch=19)
text(0.1, -0.2, labels = expression(hat(x)), adj = 1)
library(mnormt)
xhat <- c(0.2, -0.2)
Sigma <- matrix(c(0.4, 0.3,
0.3, 0.45), ncol=2)
x1 <- seq(-2, 4,length=151)
x2 <- seq(-4, 2,length=151)
f <- function(x1,x2, mean=xhat, varcov=Sigma)
dmnorm(cbind(x1,x2), mean,varcov)
z <- outer(x1,x2, f)
mycols <- topo.colors(100,0.5)
image(x1,x2,z, col=mycols, main="Prior density",
xlab=expression('x'[1]), ylab=expression('x'[2]))
contour(x1,x2,z, add=TRUE)
points(0.2, -0.2, pch=19)
text(0.1, -0.2, labels = expression(hat(x)), adj = 1)
R <- 0.5 * Sigma
z2 <- outer(x1,x2, f, mean=c(2.3, -1.9), varcov=R)
image(x1, x2, z2, col=mycols, main="Sensor density")
contour(x1, x2, z2, add=TRUE)
points(2.3, -1.9, pch=19)
text(2.2, -1.9, labels = "y", adj = 1)
contour(x1, x2,z, add=TRUE)
points(0.2, -0.2, pch=19)
text(0.1, -0.2, labels = expression(hat(x)), adj = 1)
G <- diag(2)
y <- c(2.4, -1.9)
xhatf <- xhat + Sigma %*% t(G) %*% solve(G %*% Sigma %*% t(G) + R) %*% (y - G %*% xhat)
Sigmaf <- Sigma - Sigma %*% t(G) %*% solve(G %*% Sigma %*% t(G) + R) %*% G %*% Sigma
z3 <- outer(x1, x2, f, mean=c(xhatf), varcov=Sigmaf)
image(x1, x2, z3, col=mycols,
xlab=expression('x'[1]), ylab=expression('x'[2]),
main="Filtered density")
contour(x1, x2, z3, add=TRUE)
points(xhatf[1], xhatf[2], pch=19)
text(xhatf[1]-0.1, xhatf[2],
labels = expression(hat(x)[f]), adj = 1)
lb <- adjustcolor("black", alpha=0.5)
contour(x1, x2, z, add=TRUE, col=lb)
points(0.2, -0.2, pch=19, col=lb)
text(0.1, -0.2, labels = expression(hat(x)), adj = 1, col=lb)
contour(x1, x2, z2, add=TRUE, col=lb)
points(2.3, -1.9, pch=19, col=lb)
text(2.2, -1.9,labels = "y", adj = 1, col=lb)
A <- matrix(c(1.2, 0,
0, -0.2), ncol=2)
Q <- 0.3 * Sigma
K <- A %*% Sigma %*% t(G) %*% solve(G%*% Sigma %*% t(G) + R)
xhatnew <- A %*% xhat + K %*% (y - G %*% xhat)
Sigmanew <- A %*% Sigma %*% t(A) - K %*% G %*% Sigma %*% t(A) + Q
z4 <- outer(x1,x2, f, mean=c(xhatnew), varcov=Sigmanew)
image(x1, x2, z4, col=mycols,
xlab=expression('x'[1]), ylab=expression('x'[2]),
main="Predictive density")
contour(x1, x2, z4, add=TRUE)
points(xhatnew[1], xhatnew[2], pch=19)
text(xhatnew[1]-0.1, xhatnew[2],
labels = expression(hat(x)[new]), adj = 1)
contour(x1, x2, z3, add=TRUE, col=lb)
points(xhatf[1], xhatf[2], pch=19, col=lb)
text(xhatf[1]-0.1, xhatf[2], col=lb,
labels = expression(hat(x)[f]), adj = 1)
contour(x1, x2, z, add=TRUE, col=lb)
points(0.2, -0.2, pch=19, col=lb)
text(0.1, -0.2, labels = expression(hat(x)), adj = 1, col=lb)
contour(x1, x2, z2, add=TRUE, col=lb)
points(2.3, -1.9, pch=19, col=lb)
text(2.2, -1.9,labels = "y", adj = 1, col=lb)
devtools::install_github("mhtess/rwebppl")
devtools::install_github("mhtess/rwebppl")
unnormed_priors = c(1, 2, 3, 4, 5)
likelihoods = rep( 4, times = 5)
unnormed_posteriors1 = unnormed_priors*likelihoods
unnormed_posteriors1
posterior1 = unnormed_posteriors1 / sum(unnormed_posteriors1)
posterior1
normed_priors = unnormed_priors / sum(unnormed_priors)
unnormed_posteriors2 = normed_priors*likelihoods
unnormed_posteriors2
posterior2 = unnormed_posteriors2 / sum(unnormed_posteriors2)
posterior2
unnormed_priors = c(1, 2, 3, 4, 5)
normed_priors = unnormed_priors / sum(unnormed_priors)
likelihoods = rep( 4, times = 5)
unnormed_posteriors1 = unnormed_priors*likelihoods
unnormed_posteriors2 = normed_priors*likelihoods
posterior1 = unnormed_posteriors1 / sum(unnormed_posteriors1)
posterior1
posterior2 = unnormed_posteriors2 / sum(unnormed_posteriors2)
posterior2
prop.test(0.2, 54, p=0)
prop.test(x=0.2, n=54, p=0)
?prop.test
heads <- rbinom(1, size = 54, prob = .2)
prop.test(heads, 54, p=0)
heads <- rbinom(1, size = 54, prob = .2)
prop.test(heads, 54, p=0.0)
heads
heads <- rbinom(1, size = 54, prob = .2)
prop.test(heads, 54, p=0.2)
binom.test(11,54, p=0)
11/54
heads <- rbinom(1, size = 54, prob = .2)
prop.test(heads, 54, p=0.0)
heads <- rbinom(1, size = 54, prob = .2)
prop.test(heads, 54, p=0.01)
heads <- rbinom(1, size = 54, prob = .2)
prop.test(heads, 54, p=0.0, alternative = "less")
heads <- rbinom(1, size = 54, prob = .2)
prop.test(heads, 54, p=0.0, alternative = "greater")
heads <- rbinom(1, size = 54, prob = .2)
prop.test(heads, 54, p=0.0, alternative = "t", correct = F)
heads <- rbinom(1, size = 54, prob = 0)
prop.test(heads, 54, p=0.0, alternative = "t", correct = F)
binom.test(11,54)
10/54
9/54
setwd("~/Documents/linclab0.github.io")
